# .github/workflows/ci.yml
name: Continuous Integration

on:
  push:
    branches: [ main, ManHou, feature/* ]
  pull_request:
    branches: [ main, ManHou ]
  workflow_dispatch:

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18, 20]
    
    permissions:
      contents: read
      checks: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: './automation/package-lock.json'

      - name: Install dependencies
        working-directory: ./automation
        run: |
          if [ -f "package-lock.json" ]; then
            npm ci
          else
            npm install
          fi

      - name: Run linting (if available)
        working-directory: ./automation
        run: |
          if npm run --silent lint 2>/dev/null; then
            npm run lint
          else
            echo "Linting script not found, skipping..."
          fi
        continue-on-error: true

      - name: Build automation
        working-directory: ./automation
        run: |
          echo "Running build automation..."
          npm run build
          
          # Verify build outputs
          if [ -d "build-reports" ]; then
            echo "Build reports directory created"
            ls -la build-reports/ || true
          fi

      - name: Run automation tests
        working-directory: ./automation
        run: |
          echo "Running automation tests..."
          npm run test
          
          # Verify test outputs
          if [ -d "test-reports" ]; then
            echo "Test reports directory created"
            ls -la test-reports/ || true
          fi

      - name: Run all automation (build + test)
        working-directory: ./automation
        run: |
          echo "Running complete automation workflow..."
          npm run all
        continue-on-error: true

      - name: Upload automation artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: automation-results-node-${{ matrix.node-version }}-${{ github.run_id }}
          if-no-files-found: ignore
          retention-days: 14
          path: |
            automation/build-reports/**
            automation/test-reports/**
            automation/logs/**
            automation/coverage/**
            automation/dist/**

  docker-build-test:
    name: Docker Build and Test
    runs-on: ubuntu-latest
    needs: build-and-test

    services:
      docker:
        image: docker:dind
        options: --privileged

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        working-directory: ./automation
        run: |
          echo "Building Docker image..."
          docker build -t webdriverio:ci-test .
          
          echo "Docker image built successfully"
          docker images webdriverio:ci-test

      - name: Test Docker container
        working-directory: ./automation
        run: |
          echo "Starting Docker container for testing..."
          
          # Run container in background
          docker run -d --name webdriverio-test \
            -v $(pwd)/test-reports:/app/test-reports \
            -v $(pwd)/logs:/app/logs \
            webdriverio:ci-test

          # Wait for container to start
          sleep 10

          # Check container logs
          echo "Container logs:"
          docker logs webdriverio-test || true

          # Check if container is still running
          if docker ps | grep -q webdriverio-test; then
            echo "✅ Container is running successfully"
          else
            echo "⚠️ Container stopped, checking exit code..."
            docker ps -a | grep webdriverio-test || true
          fi

          # Cleanup
          docker rm -f webdriverio-test || true

      - name: Test Docker Compose setup
        working-directory: ./automation
        run: |
          echo "Testing Docker Compose configuration..."
          
          # Validate docker-compose.yml
          docker-compose config
          
          # Start services (quick test)
          docker-compose up -d --no-deps webdriverio-app
          sleep 15
          
          # Check service status
          docker-compose ps
          
          # Get logs
          echo "Service logs:"
          docker-compose logs webdriverio-app || true
          
          # Cleanup
          docker-compose down || true

      - name: Upload Docker test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: docker-test-results-${{ github.run_id }}
          if-no-files-found: ignore
          retention-days: 7
          path: |
            automation/test-reports/**
            automation/logs/**